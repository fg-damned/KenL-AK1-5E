<?xml version="1.0" encoding="iso-8859-1"?>

<!--
	'Fantasy Grounds' is a trademark of SmiteWorks USA, LLC. 'Fantasy Grounds' is Copyright 2004-2014 SmiteWorks USA LLC.
	The CoreRPG ruleset and all included files are copyright 2004-2013, Smiteworks USA LLC.
-->

<!--
	Custom Modifications Copyright (C) 2018 Ken L.
	Licensed under the GPL Version 3 license.
	http://www.gnu.org/licenses/gpl.html
	This script is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This script is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
-->

<root>
	<string name="image_tooltip_layers">Toggle Layer Toolbar</string>

	<windowclass name="imagewindow">
		<frame>imagebox</frame>
		<sizelimits>
			<minimum width="120" height="120" />
			<dynamic />
		</sizelimits>
		<playercontrol />
		<sharable />
		<nodelete />
		<tooltip field="name" />
		<minimize>minimized_image</minimize>
		<script file="campaign/scripts/imagewindow.lua" />
		<sheetdata>
			<sub_record_header_image name="header" />

			<sub_record_toolbar_image name="toolbar" />
			
			<image_record name="image" />

			<!--Enhanced Image Extension-->
			<image_record name="features_image" />
			<image_record name="play_image" />
			<!--End Extension-->
			
			<scrollercontrol name="scroller_image">
				<anchored to="image" position="insidebottomright" offset="3,3" width="40" height="38" />
				<target>image</target>
				<button normal="button_scrollerpan" pressed="button_scrollerpan_down" zoom="button_zoomer" zoompressed="button_zoomer_down" />
			</scrollercontrol>
			<imagedata_record name="imagedata" source="image" />

			<list_viewers />
			<resize_imagebox />
			<close_imagebox />
		</sheetdata>
	</windowclass>

	<windowclass name="imagewindow_header">
		<margins control="0,0,0,8" />
		<frame>imagebox_header</frame>
		<script>
			function onInit()
				if User.isHost() then
					nonid_name.resetAnchor("left");
					nonid_name.setAnchor("left", nil, "center", "absolute", -10);
					self.onSizeChanged = update;
				end
				update();
			end
			
			function update()
				local nodeRecord = getDatabaseNode();
				local bReadOnly = WindowManager.getReadOnlyState(nodeRecord);
				name.setReadOnly(bReadOnly);
				nonid_name.setReadOnly(bReadOnly);
				
				local bID = LibraryData.getIDState("image", nodeRecord);
				if User.isHost() then
					local w,h = getSize();
					local bShowNonID = (w >= 450);
					isidentified.setVisible(bShowNonID);
					nonid_name.setVisible(bShowNonID);
				else
					name.setVisible(bID);
					nonid_name.setVisible(not bID);
				end
			end
		</script>
		<sheetdata>
			<link_record_header_id name="link">
				<class>imagewindow</class>
			</link_record_header_id>

			<anchor_record_image_header_right name="rightanchor" />
			<icon_record_locked />
			<button_record_locked />

			<string_record_name_image name="nonid_name">
				<empty textres="library_recordtype_empty_nonid_image" />
			</string_record_name_image>
			<button_record_isidentified_image name="isidentified" />
			<string_record_name_image name="name">
				<empty textres="library_recordtype_empty_image" />
			</string_record_name_image>
		</sheetdata>
	</windowclass>

	<windowclass name="imagewindow_toolbar">
		<frame>toolbar_back</frame>
		<script>
			function onInit()
				update();
			end
			
			function getBackgroundImage()
				return parentcontrol.window.image;
			end
			
			function getFeaturesImage()
				return parentcontrol.window.features_image;
			end
			
			function getImage()
				return parentcontrol.window.play_image;
			end
			
			function update()
				local bHasTokens = getImage().hasTokens();

				if User.isHost() then
					toolbar_draw.setVisibility(true);
					h2.setVisible(true);
					
					h4.setVisible(true);

					toggle_layers.setVisible(true);
		
					local bShowLayersToggle = false;
					if (toggle_layers.getValue() > 0) then
						bShowLayersToggle = true;
					end			

					local bShowLayersToolbar = false;
					bShowLayersToolbar = bShowLayersToggle;
					toolbar_layers.setVisibility(bShowLayersToolbar);					
					
					local bShowGridToggle = getImage().hasGrid();
					toggle_grid.setVisible(bShowGridToggle);
					
					local bShowGridToolbar = false;
					if toggle_grid.getValue() > 0 then
						bShowGridToolbar = bShowGridToggle;
					end
					toolbar_grid.setVisibility(bShowGridToolbar);

					toolbar_clear_saves.setVisible(true); 

					h1.setVisible(true);
				end

				toggle_select.setVisible(bHasTokens);
				h3.setVisible(bHasTokens);
				toggle_targetselect.setVisible(bHasTokens);
				toolbar_targeting.setVisibility(bHasTokens);
			end
		</script>
		<sheetdata>
			<genericcontrol name="toolbar_anchor">
				<anchored position="insidetopleft" offset="0,1" width="0" height="34" />
				<disabled />
			</genericcontrol>
			
			<toolbar_30 name="toolbar_draw">
				<anchored to="toolbar_anchor">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<button>
					<name>unmask_button</name>
					<id>unmask</id>
					<icon>tool_mask_30</icon>
					<tooltipres>image_tooltip_toolbarmask</tooltipres>
				</button>
				<button>
					<name>paint_button</name>
					<id>paint</id>
					<icon>tool_paint_30</icon>
					<tooltipres>image_tooltip_toolbardraw</tooltipres>
				</button>
				<button>
					<name>erase_button</name>
					<id>erase</id>
					<icon>tool_erase_30</icon>
					<tooltipres>image_tooltip_toolbarerase</tooltipres>
				</button>
				<toggle />
				<invisible />
				<!-- We Need to change the logic here such when the value is changed (?)
					we show some buttons as disabled if they cannot be activated.
				-->
				<script file="campaign/scripts/toolbar_draw.lua" />
			</toolbar_30>
			
			<genericcontrol name="h4">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>
			<buttoncontrol name="toggle_layers">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<state icon="tool_layers_30" color="60A0A0A0" />
				<state icon="tool_layers_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_layers" />
				<invisible />
				<script>
					local showlayerbar = 0;
					
					function getValue()
						return showlayerbar;
					end
					
					function onButtonPress()
						if showlayerbar > 0 then
							showlayerbar = 0;
						else
							showlayerbar = 1;
						end
						window.parentcontrol.window.updateDisplay();
						window.toolbar_draw.onValueChanged();
					end
										
				</script>
			</buttoncontrol>			
			<toolbar_30 name="toolbar_layers">
				<anchored to="toolbar_anchor">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>			
				<invisible/>
				<button>
					<name>layer_background</name>
					<id>layer_background</id>
					<icon>tool_layers_background_30</icon>
					<tooltip>Background Layer</tooltip>
				</button>
				<button>
					<name>layer_features</name>
					<id>layer_features</id>
					<icon>tool_layers_features_30</icon>
					<tooltip>Features Layer</tooltip>
				</button>
				<button>
					<name>layer_play</name>
					<id>layer_play</id>
					<icon>tool_layers_play_30</icon>
					<tooltip>Play Layer</tooltip>
				</button>
				<toggle />
				<invisible />
				<script>
					function onInit()
						super.onInit();
						setActive("layer_play");
					end
					
					function onButtonPress(sID)
						if (sID == "layer_background") then
							setActive("layer_background");
							window.parentcontrol.window.showLayer("background");
						elseif (sID == "layer_features") then
							setActive("layer_features");
							window.parentcontrol.window.showLayer("features");
						elseif (sID == "layer_play") then
							setActive("layer_play");
							window.parentcontrol.window.showLayer("play");
						end
						window.toolbar_draw.onValueChanged();
					end
				</script>
			</toolbar_30>			
			
			<genericcontrol name="h2">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>
			<buttoncontrol name="toggle_grid">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<state icon="tool_grid_30" color="60A0A0A0" />
				<state icon="tool_grid_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbargrid" />
				<invisible />
				<script>
					function onValueChanged()
						window.parentcontrol.window.updateDisplay();
					end
				</script>
			</buttoncontrol>
			<toolbar_30 name="toolbar_grid">
				<anchored to="toolbar_anchor">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible/>
				<button>
					<id>gridleft</id>
					<icon>tool_left_30</icon>
					<tooltipres>image_tooltip_toolbargridleft</tooltipres>
				</button>
				<button>
					<id>gridright</id>
					<icon>tool_right_30</icon>
					<tooltipres>image_tooltip_toolbargridright</tooltipres>
				</button>
				<button>
					<id>gridup</id>
					<icon>tool_up_30</icon>
					<tooltipres>image_tooltip_toolbargridup</tooltipres>
				</button>
				<button>
					<id>griddown</id>
					<icon>tool_down_30</icon>
					<tooltipres>image_tooltip_toolbargriddown</tooltipres>
				</button>
				<button>
					<id>gridplus</id>
					<icon>tool_plus_30</icon>
					<tooltipres>image_tooltip_toolbargridplus</tooltipres>
				</button>
				<button>
					<id>gridminus</id>
					<icon>tool_minus_30</icon>
					<tooltipres>image_tooltip_toolbargridminus</tooltipres>
				</button>
				<script>
					function onButtonPress(sID)
						local image = window.parentcontrol.window.play_image;
						
						local gridsize = image.getGridSize();
						local ox, oy = image.getGridOffset();
						
						if (sID == "gridleft") then
							ox = ox - 1;
							image.setGridOffset(ox, oy);
						elseif (sID == "gridright") then
							ox = ox + 1;
							image.setGridOffset(ox, oy);
						elseif (sID == "gridup") then
							oy = oy - 1;
							image.setGridOffset(ox, oy);
						elseif (sID == "griddown") then
							oy = oy + 1;
							image.setGridOffset(ox, oy);
						elseif (sID == "gridplus") then
							gridsize = gridsize + 1;
							image.setGridSize(gridsize);
						elseif (sID == "gridminus") then
							gridsize = gridsize - 1;
							image.setGridSize(gridsize);
						end
					end
				</script>
			</toolbar_30>
			
			<genericcontrol name="h1">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>
			<buttoncontrol name="toggle_select">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<state icon="tool_select_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbarselect" />
				<script>
					function onButtonPress()
						local image = window.getImage();
						
						if image.getCursorMode() == "select" then
							image.setCursorMode();
						else
							image.setCursorMode("select");
						end
					end
					
					function updateDisplay()
						if window.getImage().getCursorMode() == "select" then
							setColor("ffffffff");
						else
							setColor("60a0a0a0");
						end
					end
				</script>
			</buttoncontrol>

			<genericcontrol name="h3">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>
			<buttoncontrol name="toggle_targetselect">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<state icon="tool_target_select_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbartarget" />
				<script>
					function onButtonPress()
						local image = window.getImage();
						
						if image.getCursorMode() == "target" then
							image.setCursorMode();
						else
							image.setCursorMode("target");
						end
					end
					
					function updateDisplay()
						if window.getImage().getCursorMode() == "target" then
							setColor("ffffffff");
						else
							setColor("60a0a0a0");
						end
					end
				</script>
			</buttoncontrol>
			<toolbar_30 name="toolbar_targeting">
				<anchored to="toolbar_anchor">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible/>
				<button>
					<id>clear</id>
					<icon>tool_target_clear_30</icon>
					<tooltipres>image_tooltip_toolbartargetclear</tooltipres>
				</button>
				<button>
					<id>friend</id>
					<icon>tool_target_allies_30</icon>
					<tooltipres>image_tooltip_toolbartargetfriend</tooltipres>
				</button>
				<button>
					<id>foe</id>
					<icon>tool_target_enemies_30</icon>
					<tooltipres>image_tooltip_toolbartargetfoe</tooltipres>
				</button>
				<script>
					function onButtonPress(sID)
						if sID == "clear" then
							Debug.console("clearing targets from play-image"); 
							TargetingManager.clearTargets(window.getImage());

						elseif sID == "friend" then
							TargetingManager.setFactionTargets(window.getImage());
						elseif sID == "foe" then
							TargetingManager.setFactionTargets(window.getImage(), true);
						end
					end
				</script>
			</toolbar_30>

			<buttoncontrol name="toolbar_clear_saves">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible/>
				<state icon="tool_clear_saves_30" />
				<frame name="toolbar_30" />
				<tooltip textres="tooltip_saves_clear_toolbar" />
				<script>
					function onButtonPress()
						Debug.console("pressed save clear button!"); 
						local image = window.parentcontrol.window.play_image;
						local listTokens = image.getTokens(); 
						for _,token in pairs(listTokens) do
							local nodeCT = CombatManager.getCTFromToken(token);
							if nodeCT then
								TokenManager2.setSaveOverlay(nodeCT,0); 	
							end
						end
					end
					
					function updateDisplay()
					end
				</script>
			</buttoncontrol>

		</sheetdata>
	</windowclass>
</root>
